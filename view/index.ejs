<!doctype html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>
<body>
    <main>
        <nav class="bg-[#1F2435] text-white text-center py-3">
            <input id="peer-input" type="text" placeholder="other peer id" class="text-black" />
            <button id="connect-btn">연결</button>
        </nav>
        <section class="flex flex-2 min-h-[100vh]">
            <div class="video-side grid grid-cols-4 bg-[#181B29]">
                <div class=" h-[300px]">
                    <video id="myvideo"  width="400" height="300"/>
                </div>
            </div>
            <div class="chat-side bg-[#262C41] w-[600px]">
                <nav class="text-white text-center py-3">Chat</nav>
                <ul class="text-white px-2">
                    <li>name : hi</li>
                    <li>name : hi</li>
                    <li>name : hi</li>
                </ul>
            </div>
        </section>
    </main>

</body>
<script src="https://cdn.tailwindcss.com"></script>
<script src="/socket.io/socket.io.js"></script>
<script src="https://unpkg.com/peerjs@1.3.2/dist/peerjs.min.js"></script>
<script>
    let socket = io();
    let peer = new Peer();
    const myVideo = document.querySelector('#myvideo');
    const connectBtn = document.querySelector('#connect-btn');
    const peerInput = document.querySelector('#peer-input');
    init();

    function init(){
        getMyVideo();
        openMypeer();
        listenOtherPeer();
    }

    function getMyVideo(){
        myVideo.addEventListener("loadedmetadata", () => {
            myVideo.play();
        });
        navigator.mediaDevices.getUserMedia({
            audio:false,
            video:true
        }).then(stream=>{
            myVideo.srcObject = stream;

        })
    }
    function openMypeer(){
        peer.on('open',(id)=>{
            console.log('My Peer id : ',id)
        })
    }

    function listenOtherPeer(){
        peer.on('connection',(conn)=>{
            console.log('someone connected :',conn);
            conn.on('data',(data)=>{
                console.log('받은 데이터 : ',data)
            })
        })
    }

    function connectToOtherPeer(){
        const conn = peer.connect(peerInput.value);
        conn.on('open',()=>{
            conn.send('hihi!')
        })

    }

    connectBtn.addEventListener('click',connectToOtherPeer);

</script>

</html>